predic[[j]] = apply(MICE$imp[id[j]][[1]], 1, mean)
apply(MICE_no29$imp[id[j]][[1]], 1, mean)
MICE_no29$imp[id[j]][[1]]
i!=2
i
predic = predic_no29 = list(IMPC_HEM_027_001=NULL,IMPC_HEM_029_001=NULL,IMPC_HEM_031_001=NULL,
IMPC_HEM_034_001=NULL,IMPC_HEM_038_001=NULL)
mse = rep(0,5)
mse_no29 = rep(0,5)
imputed_mat = NULL
for (j in 1:5) {
predic[[j]] = apply(MICE$imp[id[j]][[1]], 1, mean)
#Only have predictions for 4 vars for now
if (j!=2) {
predic_no29[[j]] = apply(MICE_no29$imp[id[j]][[1]], 1, mean)
#Put imputed values back into data frame
imputed_mat = impMICE
imputed_mat[imputed_mat$geno==NAgeno[j],id[j]] = predic_no29[[j]]
}
mse[j] <- mse(actual = true[[j]], predicted = predic[[j]])
}
MICE_no29$imp[id[j]][[1]]
j
id[j]
j
k = ifelse(j=1,j,j-1)
k=2
id_no29[k]
apply(MICE_no29$imp[id_no29[k]][[1]], 1, mean)
j
predic_no29[[j]] = apply(MICE_no29$imp[id_no29[k]][[1]], 1, mean)
predic = predic_no29 = list(IMPC_HEM_027_001=NULL,IMPC_HEM_029_001=NULL,IMPC_HEM_031_001=NULL,
IMPC_HEM_034_001=NULL,IMPC_HEM_038_001=NULL)
mse = rep(0,5)
mse_no29 = rep(0,5)
imputed_mat = NULL
for (j in 1:5) {
predic[[j]] = apply(MICE$imp[id[j]][[1]], 1, mean)
#Only have predictions for 4 vars for now
if (j!=2) {
k = ifelse(j==0,1,j,j-1)
predic_no29[[j]] = apply(MICE_no29$imp[id_no29[k]][[1]], 1, mean)
#Put imputed values back into data frame
imputed_mat = impMICE
imputed_mat[imputed_mat$geno==NAgeno[j],id[j]] = predic_no29[[j]]
}
mse[j] <- mse(actual = true[[j]], predicted = predic[[j]])
}
predic = predic_no29 = list(IMPC_HEM_027_001=NULL,IMPC_HEM_029_001=NULL,IMPC_HEM_031_001=NULL,
IMPC_HEM_034_001=NULL,IMPC_HEM_038_001=NULL)
mse = rep(0,5)
mse_no29 = rep(0,5)
imputed_mat = NULL
for (j in 1:5) {
predic[[j]] = apply(MICE$imp[id[j]][[1]], 1, mean)
#Only have predictions for 4 vars for now
if (j!=2) {
k = ifelse(j==0,j,j-1)
predic_no29[[j]] = apply(MICE_no29$imp[id_no29[k]][[1]], 1, mean)
#Put imputed values back into data frame
imputed_mat = impMICE
imputed_mat[imputed_mat$geno==NAgeno[j],id[j]] = predic_no29[[j]]
}
mse[j] <- mse(actual = true[[j]], predicted = predic[[j]])
}
j
k
predic = predic_no29 = list(IMPC_HEM_027_001=NULL,IMPC_HEM_029_001=NULL,IMPC_HEM_031_001=NULL,
IMPC_HEM_034_001=NULL,IMPC_HEM_038_001=NULL)
mse = rep(0,5)
mse_no29 = rep(0,5)
imputed_mat = NULL
for (j in 1:5) {
predic[[j]] = apply(MICE$imp[id[j]][[1]], 1, mean)
#Only have predictions for 4 vars for now
if (j!=2) {
k = ifelse(j==1,j,j-1)
predic_no29[[j]] = apply(MICE_no29$imp[id_no29[k]][[1]], 1, mean)
#Put imputed values back into data frame
imputed_mat = impMICE
imputed_mat[imputed_mat$geno==NAgeno[j],id[j]] = predic_no29[[j]]
}
mse[j] <- mse(actual = true[[j]], predicted = predic[[j]])
}
sum(is.na(imputed_mat))
predic_no29[[j]]
predic_no29
j
predic_no29[[j]]
imputed_mat[imputed_mat$geno==NAgeno[j],id[j]]
predic = predic_no29 = list(IMPC_HEM_027_001=NULL,IMPC_HEM_029_001=NULL,IMPC_HEM_031_001=NULL,
IMPC_HEM_034_001=NULL,IMPC_HEM_038_001=NULL)
mse = rep(0,5)
mse_no29 = rep(0,5)
imputed_mat = impMICE
for (j in 1:5) {
predic[[j]] = apply(MICE$imp[id[j]][[1]], 1, mean)
#Only have predictions for 4 vars for now
if (j!=2) {
k = ifelse(j==1,j,j-1)
predic_no29[[j]] = apply(MICE_no29$imp[id_no29[k]][[1]], 1, mean)
#Put imputed values back into data frame
imputed_mat[imputed_mat$geno==NAgeno[j],id[j]] = predic_no29[[j]]
}
mse[j] <- mse(actual = true[[j]], predicted = predic[[j]])
}
sum(is.na(imputed_mat))
lm_mod = lm(IMPC_HEM_029_001~., data=imputed_mat[,-2])
predic_no29[[2]] = predict(lm_mod, newdata=imputed_mat[imputed_mat$geno==NAgeno[2],])
predic_no29[[2]]
for (j in 1:5) {
mse_no29 = mse(actual = true[[j]], predicted = predic_no29[[j]])
}
mse_no29
data.frame(true[[2]], predict_no29[[2]])
data.frame(true[[2]], predic_no29[[2]])
for (j in 1:5) {
mse_no29[j] = mse(actual = true[[j]], predicted = predic_no29[[j]])
}
j
mse_no29
mse(true[[2]], predic_no29[[2]])
mse(true[[3]], predic_no29[[3]])
res[i, ] <- mse
res
head(res)
head(res_no29)
res_no29[i, ] <- mse_no29
head(res_no29)
gc()
library(mice)
library(Metrics)
# read data
mouse.data <- readRDS("mouse_data.rds")
# consider only complete observations: delete genotypes with missing values
full_mouse <- mouse.data[-which(mouse.data$geno %in% c("1796_1", "3621_1", "4045_1", "3803_1", "3887_1")),]
Nsimul = 100
res <- matrix(0, Nsimul, 5)
res_no29 <- matrix(0, Nsimul, 5)
colnames(res) = colnames(res_no29) = c("IMPC_HEM_027_001", "IMPC_HEM_029_001", "IMPC_HEM_031_001", "IMPC_HEM_034_001", "IMPC_HEM_038_001")
sim_geno = matrix("", Nsimul, 5)
wh_var_29 = which(colnames(full_mouse)=="IMPC_HEM_029_001")
# consider only complete observations: delete genotypes with missing values
full_mouse <- mouse.data[-which(mouse.data$geno %in% c("1796_1", "3621_1", "4045_1", "3803_1", "3887_1")),]
for(i in 1:Nsimul)
{
# temporary dataframe
temp <- full_mouse
# empty method vector
method <- c("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")
method_no29 <- c("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")
# randomly select phenotypes to be deleted
NAgeno <- sample(unique(temp$geno)[2:9], 5)
NAvar <- c("IMPC_HEM_027_001", "IMPC_HEM_029_001", "IMPC_HEM_031_001", "IMPC_HEM_034_001", "IMPC_HEM_038_001")
# save true values + delete in temp
true = list(IMPC_HEM_027_001=temp[temp$geno==NAgeno[1],NAvar[1]],
IMPC_HEM_029_001=temp[temp$geno==NAgeno[2],NAvar[2]],
IMPC_HEM_031_001=temp[temp$geno==NAgeno[3],NAvar[3]],
IMPC_HEM_034_001=temp[temp$geno==NAgeno[4],NAvar[4]],
IMPC_HEM_038_001=temp[temp$geno==NAgeno[5],NAvar[5]])
for (j in 1:5) {
temp[temp$geno == NAgeno[j],  colnames(temp) == NAvar[j]] <- NA
}
sim_geno[i,] = NAgeno
# create data frame with all variables to impute + predictors
impMICE <- as.data.frame(cbind(temp[,2:3], temp[,5:26]))
impMICE_no29 <- as.data.frame(cbind(temp[,2:3], temp[,c(5:(wh_var_29-1),(wh_var_29+1):26)]))
# column ids of variables with missing values
id <- which(colnames(impMICE) %in% NAvar)
id_no29 = which(colnames(impMICE_no29) %in% NAvar)
# method norm + pmm
method[id] <- "norm"
method_no29[id_no29] <- "norm"
# matrix to specify which preditors to use
pred <- matrix(0, nrow = ncol(impMICE), ncol = ncol(impMICE))
pred[id,] <- rep(1, ncol(impMICE))
diag(pred) <- rep(0, ncol(impMICE))
pred_no29 = pred[-wh_var_29,-wh_var_29]
# apply MICE
MICE <- mice(impMICE, m = 30, method = method, predictorMatrix = pred, printFlag = FALSE)
MICE_no29 <- mice(impMICE_no29, m = 30, method = method_no29, predictorMatrix = pred_no29, printFlag = FALSE)
# get predictions and compute mse
predic = predic_no29 = list(IMPC_HEM_027_001=NULL,IMPC_HEM_029_001=NULL,IMPC_HEM_031_001=NULL,
IMPC_HEM_034_001=NULL,IMPC_HEM_038_001=NULL)
mse = rep(0,5)
mse_no29 = rep(0,5)
imputed_mat = impMICE
for (j in 1:5) {
predic[[j]] = apply(MICE$imp[id[j]][[1]], 1, mean)
#Only have predictions for 4 vars for now
if (j!=2) {
k = ifelse(j==1,j,j-1)
predic_no29[[j]] = apply(MICE_no29$imp[id_no29[k]][[1]], 1, mean)
#Put imputed values back into data frame
imputed_mat[imputed_mat$geno==NAgeno[j],id[j]] = predic_no29[[j]]
}
mse[j] <- mse(actual = true[[j]], predicted = predic[[j]])
}
#Now, given the predictions for the other variables, predict var 29
lm_mod = lm(IMPC_HEM_029_001~., data=imputed_mat[,-2])
predic_no29[[2]] = predict(lm_mod, newdata=imputed_mat[imputed_mat$geno==NAgeno[2],])
for (j in 1:5) {
mse_no29[j] = mse(actual = true[[j]], predicted = predic_no29[[j]])
}
# save results
res[i, ] <- mse
res_no29[i, ] <- mse_no29
cat(i, "\n")
}
head(res)
head(res_no29)
colMeans(res)
colMeans(res_no29)
data.frame(res_no29[,2], sim_geno[,2])
dim(imputed_mat)
NAgeno
mean(res[sim_geno[,2]!="727_1",])
mean(res_no29[sim_geno[,2]!="727_1",])
mean(res[sim_geno[,2]!="727_1",2])
mean(res_no29[sim_geno[,2]!="727_1",2])
!imputed_mat$geno %in% NAgeno
lm_mod = lm(IMPC_HEM_029_001~., data=imputed_mat[!imputed_mat$geno %in% NAgeno,-2])
predic_no29[[2]] = predict(lm_mod, newdata=imputed_mat[imputed_mat$geno==NAgeno[2],])
predic_no29
for (j in 1:5) {
mse_no29[j] = mse(actual = true[[j]], predicted = predic_no29[[j]])
}
mse_no29
NAgeno
save(res, res_no29, sim_geno, file = "simulation_final.RData")
gc
gc()
library(mice)
library(Metrics)
# read data
mouse.data <- readRDS("mouse_data.rds")
# consider only complete observations: delete genotypes with missing values
full_mouse <- mouse.data[-which(mouse.data$geno %in% c("1796_1", "3621_1", "4045_1", "3803_1", "3887_1")),]
Nsimul = 100
res <- matrix(0, Nsimul, 5)
res_no29 <- matrix(0, Nsimul, 5)
colnames(res) = colnames(res_no29) = c("IMPC_HEM_027_001", "IMPC_HEM_029_001", "IMPC_HEM_031_001", "IMPC_HEM_034_001", "IMPC_HEM_038_001")
sim_geno = matrix("", Nsimul, 5)
wh_var_29 = which(colnames(full_mouse)=="IMPC_HEM_029_001")
# consider only complete observations: delete genotypes with missing values
full_mouse <- mouse.data[-which(mouse.data$geno %in% c("1796_1", "3621_1", "4045_1", "3803_1", "3887_1")),]
for(i in 1:Nsimul)
{
# temporary dataframe
temp <- full_mouse
# empty method vector
method <- c("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")
method_no29 <- c("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")
# randomly select phenotypes to be deleted
NAgeno <- sample(unique(temp$geno)[2:9], 5)
NAvar <- c("IMPC_HEM_027_001", "IMPC_HEM_029_001", "IMPC_HEM_031_001", "IMPC_HEM_034_001", "IMPC_HEM_038_001")
# save true values + delete in temp
true = list(IMPC_HEM_027_001=temp[temp$geno==NAgeno[1],NAvar[1]],
IMPC_HEM_029_001=temp[temp$geno==NAgeno[2],NAvar[2]],
IMPC_HEM_031_001=temp[temp$geno==NAgeno[3],NAvar[3]],
IMPC_HEM_034_001=temp[temp$geno==NAgeno[4],NAvar[4]],
IMPC_HEM_038_001=temp[temp$geno==NAgeno[5],NAvar[5]])
for (j in 1:5) {
temp[temp$geno == NAgeno[j],  colnames(temp) == NAvar[j]] <- NA
}
sim_geno[i,] = NAgeno
# create data frame with all variables to impute + predictors
impMICE <- as.data.frame(cbind(temp[,2:3], temp[,5:26]))
impMICE_no29 <- as.data.frame(cbind(temp[,2:3], temp[,c(5:(wh_var_29-1),(wh_var_29+1):26)]))
# column ids of variables with missing values
id <- which(colnames(impMICE) %in% NAvar)
id_no29 = which(colnames(impMICE_no29) %in% NAvar)
# method norm + pmm
method[id] <- "norm"
method_no29[id_no29] <- "norm"
# matrix to specify which preditors to use
pred <- matrix(0, nrow = ncol(impMICE), ncol = ncol(impMICE))
pred[id,] <- rep(1, ncol(impMICE))
diag(pred) <- rep(0, ncol(impMICE))
pred_no29 = pred[-wh_var_29,-wh_var_29]
# apply MICE
MICE <- mice(impMICE, m = 30, method = method, predictorMatrix = pred, printFlag = FALSE)
MICE_no29 <- mice(impMICE_no29, m = 30, method = method_no29, predictorMatrix = pred_no29, printFlag = FALSE)
# get predictions and compute mse
predic = predic_no29 = list(IMPC_HEM_027_001=NULL,IMPC_HEM_029_001=NULL,IMPC_HEM_031_001=NULL,
IMPC_HEM_034_001=NULL,IMPC_HEM_038_001=NULL)
mse = rep(0,5)
mse_no29 = rep(0,5)
imputed_mat = impMICE
for (j in 1:5) {
predic[[j]] = apply(MICE$imp[id[j]][[1]], 1, mean)
#Only have predictions for 4 vars for now
if (j!=2) {
k = ifelse(j==1,j,j-1)
predic_no29[[j]] = apply(MICE_no29$imp[id_no29[k]][[1]], 1, mean)
#Put imputed values back into data frame
imputed_mat[imputed_mat$geno==NAgeno[j],id[j]] = predic_no29[[j]]
}
mse[j] <- mse(actual = true[[j]], predicted = predic[[j]])
}
#Now, given the predictions for the other variables, predict var 29
lm_mod = lm(IMPC_HEM_029_001~., data=imputed_mat[!imputed_mat$geno %in% NAgeno,-2])
predic_no29[[2]] = predict(lm_mod, newdata=imputed_mat[imputed_mat$geno==NAgeno[2],])
for (j in 1:5) {
mse_no29[j] = mse(actual = true[[j]], predicted = predic_no29[[j]])
}
# save results
res[i, ] <- mse
res_no29[i, ] <- mse_no29
cat(i, "\n")
}
mean(res[,2])
mean(res_no29[,2])
head(res_no29)
head()
data.frame(res_no29[,2],sim_geno[,2])
robcov
library(rms)
robcov
boxplot(res, main = "Imputation via OLS")
boxplot(res_no29, main = "Imputation via MICE , var29 alone")
boxplot(res, main = "Imputation via MICE")
boxplot(cbind(res[,1],res_no29[,2],res[,3:5]), main = "Imputation via mice, var29 replaced in original")
res_replace29 = cbind(res[,1],res_no29[,2],res[,3:5])
head(res_replace29)
mean(res)
mean(res_no29)
mean(res_replace29)
boxplot(res_replace29, main = "Imputation via mice, var29 replaced in original")
boxplot(res_replace29, main = "Imputation via mice, \n var29 replaced in original")
boxplot(res_no29, main = "Imputation via MICE , var29 alone")
boxplot(res, main = "Imputation via MICE")
boxplot(res_no29, main = "Imputation via MICE , var29 alone")
colMeans(res)
colMeans(res_no29)
boxplot(res_replace29, main = "Imputation via mice, \n var29 replaced in original")
gc()
library(mice)
library(Metrics)
# read data
mouse.data <- readRDS("mouse_data.rds")
mouse.data
NAvar = c("IMPC_HEM_027_001", "IMPC_HEM_029_001", "IMPC_HEM_031_001", "IMPC_HEM_034_001", "IMPC_HEM_038_001")
Nageno = c("1796_1", "3621_1", "4045_1", "3803_1", "3887_1")
rm(Nageno)
NAgeno = c("1796_1", "3621_1", "4045_1", "3803_1", "3887_1")
mouse.data[NAgeno[1],NAvar[1]]
mouse.data[mouse.data$geno==NAgeno[1],NAvar[1]]
NAgeno[1]
mouse.data$geno==NAgeno[1]
mouse.data[mouse.data$geno==NAgeno[1],NAvar[2]]
mouse.data[mouse.data$geno==NAgeno[1],NAvar[3]]
data.frame(mouse.data$geno[,is.na(mouse.data$IMPC_HEM_027_001)])
data.frame(mouse.data$geno[is.na(mouse.data$IMPC_HEM_027_001)])
data.frame(mouse.data$geno[is.na(mouse.data$IMPC_HEM_029_001)])
data.frame(mouse.data$geno[is.na(mouse.data$IMPC_HEM_031_001)])
TRUE*TRUE
data.frame(mouse.data$geno[is.na(mouse.data$IMPC_HEM_034_001)])
data.frame(mouse.data$geno[is.na(mouse.data$IMPC_HEM_038_001)])
NAgeno = c("3621_1", "4045_1", "1796_1", "3887_1", "3803_1")
allNA = rep(TRUE, 5)
allNA
i=1
mouse.data[mouse.data$geno==NAgeno[i],NAvar[i]])
mouse.data[mouse.data$geno==NAgeno[i],NAvar[i]]
all(is.na(mouse.data[mouse.data$geno==NAgeno[i],NAvar[i]]))
allNA = rep(TRUE, 5)
for (i in 1:5) {
allNA[i] = all(is.na(mouse.data[mouse.data$geno==NAgeno[i],NAvar[i]]))
}
allNA
all(allNA) #SHOULD BE TRUE, OTHERWISE SOMETHING IS WRONG
allNA = rep(FALSE, 5)
for (i in 1:5) {
allNA[i] = all(is.na(mouse.data[mouse.data$geno==NAgeno[i],NAvar[i]]))
}
all(allNA) #SHOULD BE TRUE, OTHERWISE SOMETHING IS WRONG
wh.NA.var = which(colnames(mouse.data) %in% NAvar)
wh.NA.var
method = rep("", NCOL(mouse.data)-2)
method
method[wh.NA.var] = "norm"
method
dim(mouse.data)
impMICE <- as.data.frame(cbind(mouse.data[,2:3], mouse.data[,5:26]))
head(impMICE)
sum(is.na(impMICE))
sum(is.na(mouse.data))
id = which(colnames(mouse.data) %in% NAvar)
id
pred <- matrix(0, nrow = ncol(impMICE), ncol = ncol(impMICE))
pred[id,] <- rep(1, ncol(impMICE))
diag(pred) <- rep(0, ncol(impMICE))
dim(pred)
pred
getwd
getwd()
MICE <- mice(impMICE, m = 30, method = method, predictorMatrix = pred, printFlag = FALSE)
wh_var_29 = which(colnames(full_mouse)=="IMPC_HEM_029_001")
wh_var_29 = which(colnames(mouse.data)=="IMPC_HEM_029_001")
impMICE_no29 <- as.data.frame(cbind(mouse.data[,2:3], mouse.data[,c(5:(wh_var_29-1),(wh_var_29+1):26)]))
method_no29 = which(colnames(impMICE_no29) %in% NAvar)
method_no29[id_no29] <- "norm"
id_no29 = which(colnames(mouse.data))
method_no29[id_no29] <- "norm"
MICE_no29 <- mice(impMICE_no29, m = 30, method = method_no29, predictorMatrix = pred_no29, printFlag = FALSE)
pred_no29 = pred[-wh_var_29,-wh_var_29]
MICE_no29 <- mice(impMICE_no29, m = 30, method = method_no29, predictorMatrix = pred_no29, printFlag = FALSE)
dim(impMICE_no29)
dim(impMICE)
id_no29 = which(colnames(impMICE_no29) %in% NAvar)
id_no29
method_no29 = rep("", NCOL(impMICE_no29))
length(method_no29)
length(method)
method = rep("", NCOL(impMICE))
length(method)
method[id] = "norm"
id_no29 = which(colnames(impMICE_no29) %in% NAvar)
method_no29 = rep("", NCOL(impMICE_no29))
method_no29[id_no29] <- "norm"
method_no29
MICE_no29 <- mice(impMICE_no29, m = 30, method = method_no29, predictorMatrix = pred_no29, printFlag = FALSE)
predic = predic_no29 = list(IMPC_HEM_027_001=NULL,IMPC_HEM_029_001=NULL,IMPC_HEM_031_001=NULL,
IMPC_HEM_034_001=NULL,IMPC_HEM_038_001=NULL)
predic
predic_no29
imputed_mat = impMICE
for (j in 1:5) {
predic[[j]] = apply(MICE$imp[id[j]][[1]], 1, mean)
#Only have predictions for 4 vars for now
if (j!=2) {
k = ifelse(j==1,j,j-1)
predic_no29[[j]] = apply(MICE_no29$imp[id_no29[k]][[1]], 1, mean)
#Put imputed values back into data frame
imputed_mat[imputed_mat$geno==NAgeno[j],id[j]] = predic_no29[[j]]
}
}
id_no29[k]][[1]]
MICE_no29$imp[id_no29[k]]
predic[[j]] = apply(MICE$imp[id[j]][[1]], 1, mean)
MICE$imp[id[j]][[1]]
j
id[1]
MICE$imp
method
pred
MICE <- mice(impMICE, m = 30, method = method, predictorMatrix = pred, printFlag = FALSE)
MICE$imp
id = which(colnames(impMICE) %in% NAvar)
method = rep("", NCOL(impMICE))
method[id] = "norm"
MICE <- mice(impMICE, m = 30, method = method, predictorMatrix = pred, printFlag = FALSE)
MICE$imp
for (j in 1:5) {
predic[[j]] = apply(MICE$imp[id[j]][[1]], 1, mean)
}
predic
mean(mouse.data$$IMPC_HEM_031_001)
mean(mouse.data$IMPC_HEM_031_001)
mean(mouse.data$IMPC_HEM_031_001, na.rm = TRUE)
for (j in 1:5) {
predic[[j]] = apply(MICE$imp[id[j]][[1]], 1, mean)
#Only have predictions for 4 vars for now
if (j!=2) {
k = ifelse(j==1,j,j-1)
predic_no29[[j]] = apply(MICE_no29$imp[id_no29[k]][[1]], 1, mean)
#Put imputed values back into data frame
imputed_mat[imputed_mat$geno==NAgeno[j],id[j]] = predic_no29[[j]]
}
}
predic_no29
sum(is.na(imputed_mat))
lm_mod = lm(IMPC_HEM_029_001~., data=imputed_mat[!imputed_mat$geno %in% NAgeno,-2])
predic_no29[[2]] = predict(lm_mod, newdata=imputed_mat[imputed_mat$geno==NAgeno[2],])
predic_no29
data.frame(pred[,2], pred_no29[,2])
data.frame(pred[[2], pred_no29[[2])
data.frame(pred[[2]], pred_no29[[2]])
pred[[2]]
pred[2]
pred
predic
data.frame(predic$IMPC_HEM_029_001, predic_no29$IMPC_HEM_029_001)
hist(mouse.data$IMPC_HEM_029_001)
predic[[1]]
predictions = list(IMPC_HEM_027_001=predic$IMPC_HEM_027_001,
IMPC_HEM_029_001=predic_no29$IMPC_HEM_029_001,
IMPC_HEM_031_001=predic$IMPC_HEM_031_001,
IMPC_HEM_034_001=predic_no29$IMPC_HEM_034_001,
IMPC_HEM_038_001=predic_no29$IMPC_HEM_038_001)
predictions
predictions$IMPC_HEM_027_001
hist(mouse.data$IMPC_HEM_027_001)
predictions
mouse.data.imp = mouse.data
i=1
mouse.data.imp[mouse.data.imp$geno==NAgeno[i],NAvar[i]]
for (i in 1:5) {
print(mouse.data.imp[mouse.data.imp$geno==NAgeno[i],NAvar[i]])
}
predictions[[i]]
for (i in 1:5) {
mouse.data.imp[mouse.data.imp$geno==NAgeno[i],NAvar[i]] = predictions[[i]]
}
any(is.na(mouse.data.imp)) #SHOULD BE FALSE (i.e. no NAs present)
getwd()
predictions
head(mouse.data.imp)
save(predictions, mouse.data.imp, file="FINAL_PREDICTIONS.RData")
save(predictions, mouse.data.imp, file="~/Documents/research/causal_challenge_repo/Results/FINAL_PREDICTIONS.RData")
gc()
