plot(cumsum(test_post$beta.post[,1])/(1:length(test_post$beta.post[,1])), type="l")
plot(cumsum(test_post$beta.post[,2])/(1:length(test_post$beta.post[,2])), type="l")
plot(cumsum(test_post$beta.post[,3])/(1:length(test_post$beta.post[,3])), type="l")
par(mfrow=c(3,1), mar=c(1.7,1.7,1.7,1.7))
plot(cumsum(test_post$beta.post[,1])/(1:length(test_post$beta.post[,1])), type="l")
plot(cumsum(test_post$beta.post[,2])/(1:length(test_post$beta.post[,2])), type="l")
plot(cumsum(test_post$beta.post[,3])/(1:length(test_post$beta.post[,3])), type="l")
par(mfrow=c(2,2))#, mar=c(1.7,1.7,1.7,1.7))
plot(cumsum(test_post$beta.post[,1])/(1:length(test_post$beta.post[,1])), type="l")
plot(cumsum(test_post$beta.post[,2])/(1:length(test_post$beta.post[,2])), type="l")
plot(cumsum(test_post$beta.post[,3])/(1:length(test_post$beta.post[,3])), type="l")
plot(cumsum(test_post$vu.post)/(1:length(test_post$vu.post)), type="l")
par(mfrow=c(2,2), mar=c(1.7,1.7,1.7,1.7))
plot(cumsum(test_post$beta.post[,1])/(1:length(test_post$beta.post[,1])), type="l")
plot(cumsum(test_post$beta.post[,2])/(1:length(test_post$beta.post[,2])), type="l")
plot(cumsum(test_post$beta.post[,3])/(1:length(test_post$beta.post[,3])), type="l")
plot(cumsum(test_post$vu.post)/(1:length(test_post$vu.post)), type="l")
par(mfrow=c(2,2), mar=rep(2,4))
plot(cumsum(test_post$beta.post[,1])/(1:length(test_post$beta.post[,1])), type="l")
plot(cumsum(test_post$beta.post[,2])/(1:length(test_post$beta.post[,2])), type="l")
plot(cumsum(test_post$beta.post[,3])/(1:length(test_post$beta.post[,3])), type="l")
plot(cumsum(test_post$vu.post)/(1:length(test_post$vu.post)), type="l")
plot(acf(rowMeans(test_post$beta.post)), main="Autocorrelation of mean of beta")
dev.off()
?acf
plot(acf(rowMeans(test_post$beta.post)), main="Autocorrelation of mean of beta", lag.max=1000)
plot(acf(rowMeans(test_post$vu.post)), main="Autocorrelation of mean of beta", lag.max=1000)
plot(acf(rowMeans(test_post$vu.post)), main="Autocorrelation of mean of beta", lag.max=1000)
set.seed(233)
n2 = 100
p2 = 2
Ti2 = rep(15, n2)
X2 = list()
for (i in 1:n2) {
X2[[i]] = cbind(1,rnorm(Ti2[i],2,2),rnorm(Ti2[i],-0.5,sqrt(3)))
}
beta2 = c(1,2,-2)
vu2 = 1
u2 = rnorm(n2, -1, vu)
y2 = list()
for (i in 1:n2) {
y2[[i]] = rbinom(Ti2[i], 1, i.logit(X2[[i]]%*%beta2+u2[i]))
}
#Testing the mcmc function
test_post2 = bern_mcmc(X2,y2,10000,Ti2,1.01,1.01,100)
par(mfrow=c(2,2), mar=rep(2,4))
plot(cumsum(test_post2$beta.post[,1])/(1:length(test_post2$beta.post[,1])), type="l")
plot(cumsum(test_post2$beta.post[,2])/(1:length(test_post2$beta.post[,2])), type="l")
plot(cumsum(test_post2$beta.post[,3])/(1:length(test_post2$beta.post[,3])), type="l")
plot(cumsum(test_post2$vu.post)/(1:length(test_post2$vu.post)), type="l")
save(test_post2, file="~/Documents/mcgill/math680/assignment5/dat_a5_q1d.RData")
source("~/Documents/mcgill/math680/assignment5/bayesFused.R")
source("~/Documents/mcgill/math680/assignment5/fusedRidge_crossval.R")
set.seed(9387)
n = 100; p = 5; v.star = 2
beta.star = c(1,1,0.75,0.5,0.5)
Sigma = matrix(0,p,p)
for (i in 1:p) {
for (j in 1:p) {
Sigma[i,j] = 0.7^abs(i-j)
}
}
Z1=matrix(qnorm(runif(n*p)), nrow=n, ncol=p)
eo1=eigen(Sigma, symmetric=TRUE)
Sigma.sqrt=eo1$vec %*% diag(eo1$val^0.5)%*%t(eo1$vec)
X = matrix(0,n,p) + Z1%*%Sigma.sqrt
y = qnorm(runif(n), X%*%beta.star, v.star)
#Doing 5-fold cross validation
lam = 10^(seq(-8,8,0.5))
cv_fit = cvfr(cbind(0,X), y, lam, lam, 5)
w = cv_fit$best.lam1/(cv_fit$best.lam1+cv_fit$best.lam2)
al = 2
bl = 1/(cv_fit$best.lam1+cv_fit$best.lam2)
av = 2
bv = 3/100*crossprod(X%*%cv_fit$b-y)
bayes_fit = bayesFused(X,y,10000,w,av,bv,al,bl)
bcred = matrix(0,5,2); colnames(bcred) = c("lower","upper")
bcred[1,] = quantile(bayes_fit$beta.post[,1], c(0.005,0.995))
bcred[2,] = quantile(bayes_fit$beta.post[,2], c(0.005,0.995))
bcred[3,] = quantile(bayes_fit$beta.post[,3], c(0.005,0.995))
bcred[4,] = quantile(bayes_fit$beta.post[,4], c(0.005,0.995))
bcred[5,] = quantile(bayes_fit$beta.post[,5], c(0.005,0.995))
beta_est = cbind(colMeans(bayes_fit$beta.post),bcred); colnames(beta_est) = c("estimate","lower","upper")
library(xtable)
xtable(beta_est)
beta_est = cbind(beta.star, colMeans(bayes_fit$beta.post),bcred); colnames(beta_est) = c("Truth","Estimate","Lower","Upper")
xtable(beta_est)
xtable(beta_est, digits = 4)
par(mfrow=c(2,2), mar=rep(2,4))
plot(cumsum(bayes_fit$beta.post[,1])/(1:length(bayes_fit$beta.post[,1])), type="l")
plot(cumsum(bayes_fit$beta.post[,2])/(1:length(bayes_fit$beta.post[,2])), type="l")
plot(cumsum(bayes_fit$beta.post[,3])/(1:length(bayes_fit$beta.post[,3])), type="l")
plot(cumsum(bayes_fit$beta.post[,4])/(1:length(bayes_fit$beta.post[,4])), type="l")
save(bayes_fit, file="~/Documents/mcgill/math680/assignment5/dat_a5_q2bii.RData")
plot(acf(rowMeans(bayes_fit$beta.post)), main="Autocorrelation of mean of beta")
dev.off()
plot(acf(rowMeans(bayes_fit$beta.post)), main="Autocorrelation of mean of beta")
sampleBeta = function(n, alpha, beta, b) {
if (b<=0 | b>=1) stop("b must be between 0 and 1")
if (alpha<=0) stop("alpha must be positive")
if (beta<=0) stop("beta must be positive")
#Initial value
val = 0.5
samp=rep(0,n)
for (i in 1:n) {
#Sample from trial distribution
new.val = runif(1, val-b, val+b)
#Generate unif(0,1)
U = runif(1)
#Get acceptance prob
if (U<acceptProb(val, new.val, alpha, beta)) {
val = new.val
}
samp[i] = val
}
return(samp)
}
#Helper function to get acceptance probability
acceptProb = function(x, y, alpha, beta) {
tmp = ifelse( y>0 & y<1, (y/x)^(alpha-1)*((1-y)/(1-x))^(beta-1), 0 )
return(min(1,tmp))
}
test1 = sampleBeta(10000, 2, 2, 0.5)
mean(test1)
acf(test1, main="Autocorrelation: Beta MH sampling alpha=2, beta=2", lag.max = 1000, col="darkgreen")
test2 = sampleBeta(10000, 5, 2, 0.5)
mean(test2)
acf(test2, main="Autocorrelation: Beta MH sampling alpha=5, beta=2", lag.max = 1000, col="darkgreen")
save(test1, test2, file="~/Documents/mcgill/math680/assignment5/dat_a5_q3.R")
par(mfrow=c(2,1), mar=c(3,3,3,3))
plot(cumsum(test1)/(1:length(test1)), type="l"); abline(h=0.5, col="red", lty=2, lwd=1.5)
plot(cumsum(test2)/(1:length(test2)), type="l"); abline(h=5/7, col="red", lty=2, lwd=1.5)
par(mfrow=c(2,1))
acf(test1, main="Autocorrelation: Beta MH sampling alpha=2, beta=2", lag.max = 1000, col="darkgreen")
acf(test2, main="Autocorrelation: Beta MH sampling alpha=5, beta=2", lag.max = 1000, col="darkgreen")
-Inf
-Inf*0
log(0.05)/log(0.95)
gc()
gplot+geom_boxplot(aes(fill = Variable))
library(ggplot2)
load("simulation_final.RData")
plot_data = data.frame(c(res_replace29[,1],res_replace29[,2],res_replace29[,3],res_replace29[,4],res_replace29[,5]),
rep(1:5,each = 100))
colnames(plot_data) = c("MSE", "Variable")
load("~/Documents/research/causal_challenge_2016/simulation_final.RData")
load("~/Documents/research/causal_challenge_repo/data/simulation_final.RData")
plot_data = data.frame(c(res_replace29[,1],res_replace29[,2],res_replace29[,3],res_replace29[,4],res_replace29[,5]),
rep(1:5,each = 100))
colnames(plot_data) = c("MSE", "Variable")
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(aes(fill = Variable))
gplot+geom_boxplot(aes(fill = Variable))+
scale_x_discrete(limits=colorder,labels=c("a","b","c","d","e"))
gplot+geom_boxplot(aes(fill = Variable))+
scale_x_discrete(labels=c("a","b","c","d","e"))
head(res_replace29)
gplot+geom_boxplot(aes(fill = Variable))+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count"))
theme(axis.text.x=element_text(angle = -90, hjust = 0)
)
gplot+geom_boxplot(aes(fill = Variable))+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count"))+
theme(axis.text.x=element_text(angle = -90, hjust = 0)
)
gplot+geom_boxplot(aes(fill = Variable))+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count"))+
theme(axis.text.x=element_text(angle = 90, hjust = 0))
gplot+geom_boxplot(aes(fill = Variable))+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count"))+
theme(axis.text.x=element_text(angle = 45, hjust = 0))
gplot+geom_boxplot(aes(fill = Variable))+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count"))+
theme(axis.text.x=element_text(angle = 45, hjust = 1))
gplot+geom_boxplot(aes(fill = Variable))+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count"))+
theme(axis.text.x=element_text(angle = 25, hjust = 1))
gplot+geom_boxplot(aes(fill = Variable))+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) +
theme(axis.text.x=element_text(angle = 25, hjust = 1)) +
scale_fill_manual(values = c("pink", "green"))
gplot+geom_boxplot(aes(fill = Variable))+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) +
theme(axis.text.x=element_text(angle = 25, hjust = 1)) +
scale_fill_hue(l=40, c=35)
gplot+geom_boxplot()+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) +
theme(axis.text.x=element_text(angle = 25, hjust = 1)) +
scale_fill_hue(l=40, c=35)
gplot+geom_boxplot(aes(fill=MSE))+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) +
theme(axis.text.x=element_text(angle = 25, hjust = 1)) +
)
gplot+geom_boxplot(aes(fill=MSE))+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) +
theme(axis.text.x=element_text(angle = 25, hjust = 1))
gplot+geom_boxplot(aes(fill="blue"))+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) +
theme(axis.text.x=element_text(angle = 25, hjust = 1))
gplot+geom_boxplot(fill="blue")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) +
theme(axis.text.x=element_text(angle = 25, hjust = 1))
gplot+geom_boxplot(fill="blue", color="darkred")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) +
theme(axis.text.x=element_text(angle = 25, hjust = 1))
gplot+geom_boxplot(fill="green", color="darkred")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) +
theme(axis.text.x=element_text(angle = 25, hjust = 1))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) +
theme(axis.text.x=element_text(angle = 25, hjust = 1))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) +
theme(axis.text.x=element_text(angle = 25, hjust = 1)) + theme_bw()
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count"))+
theme_bw(axis.text.x=element_text(angle = 25, hjust = 1))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) + theme_bw() +
theme(axis.text.x=element_text(angle = 25, hjust = 1))
gplot+geom_boxplot(fill="darkgreen", color="darkblue")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) + theme_bw() +
theme(axis.text.x=element_text(angle = 25, hjust = 1))
gplot+geom_boxplot(fill="darkgreen", color="lightgreen")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) + theme_bw() +
theme(axis.text.x=element_text(angle = 25, hjust = 1))
gplot+geom_boxplot(fill="lightgreen", color="darkblue")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) + theme_bw() +
theme(axis.text.x=element_text(angle = 25, hjust = 1))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) + theme_bw() +
theme(axis.text.x=element_text(angle = 25, hjust = 1))
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) + theme_bw() +
theme(axis.text.x=element_text(angle = 25, hjust = 1),axis.title.x=element_blank())
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) + theme_bw() +
theme(axis.text.x=element_text(angle = 25, hjust = 1,size=12),axis.title.x=element_blank())
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) + theme_bw() +
theme(axis.text.x=element_text(angle = 25, hjust = 1,size=8),axis.title.x=element_blank())
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) + theme_bw() +
theme(axis.text.x=element_text(angle = 25, hjust = 1,size=6),axis.title.x=element_blank())
pdf("~/Documents/research/causal_challenge_repo/plots/sim_plot.pdf")
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) + theme_bw() +
theme(axis.text.x=element_text(angle = 25, hjust = 1,size=6),axis.title.x=element_blank())
dev.off()
pdf("~/Documents/research/causal_challenge_repo/plots/sim_plot.pdf")
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("Red blood cell distribution width","Neutrophil differential count",
"Lymphocyte differential count",
"Monocyte cell count",
"Basophil differential count")) + theme_bw() +
theme(axis.text.x=element_text(angle = 25, hjust = 1,size=8),axis.title.x=element_blank())
dev.off()
pdf("~/Documents/research/causal_challenge_repo/plots/sim_plot.pdf")
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("RBC dist width","Neutro diff count",
"Lymph diff count",
"Mono cell count",
"Baso diff count")) + theme_bw() +
theme(axis.text.x=element_text(angle = 25, hjust = 1,size=8),axis.title.x=element_blank())
dev.off()
pdf("~/Documents/research/causal_challenge_repo/plots/sim_plot.pdf")
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("RBC dist width","Neutro diff count",
"Lymph diff count",
"Mono cell count",
"Baso diff count")) + theme_bw() +
theme(axis.text.x=element_text(size=8),axis.title.x=element_blank())
dev.off()
pdf("~/Documents/research/causal_challenge_repo/plots/sim_plot.pdf")
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("RBC dist width","Neutro diff count",
"Lymph diff count",
"Mono cell count",
"Baso diff count")) + theme_bw() +
theme(axis.text.x=element_text(size=11),axis.title.x=element_blank())
dev.off()
pdf("~/Documents/research/causal_challenge_repo/plots/sim_plot.pdf")
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("RBC dist width","Neutro diff count",
"Lymph diff count",
"Mono cell count",
"Baso diff count")) + theme_bw() +
theme(axis.text.x=element_text(angle=25,size=11),axis.title.x=element_blank())
dev.off()
pdf("~/Documents/research/causal_challenge_repo/plots/sim_plot.pdf")
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("RBC dist width","Neutro diff count",
"Lymph diff count",
"Mono cell count",
"Baso diff count")) + theme_bw() +
theme(axis.text.x=element_text(angle=25,size=11,vjust = 1),axis.title.x=element_blank())
dev.off()
pdf("~/Documents/research/causal_challenge_repo/plots/sim_plot.pdf")
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("RBC dist width","Neutro diff count",
"Lymph diff count",
"Mono cell count",
"Baso diff count")) + theme_bw() +
theme(axis.text.x=element_text(angle=25,size=11,hjust = 1),axis.title.x=element_blank())
dev.off()
pdf("~/Documents/research/causal_challenge_repo/plots/sim_plot.pdf")
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("RBC dist width","Neutro diff count",
"Lymph diff count",
"Mono cell count",
"Baso diff count")) + theme_bw() +
theme(axis.text.x=element_text(angle=25,size=11,hjust = 1),axis.title.x=element_blank(),
axis.text.y=element_text(size=14))
dev.off()
pdf("~/Documents/research/causal_challenge_repo/plots/sim_plot.pdf")
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("RBC dist width","Neutro diff count",
"Lymph diff count",
"Mono cell count",
"Baso diff count")) + theme_bw() +
theme(axis.text.x=element_text(angle=25,size=11,hjust = 1),axis.title.x=element_blank(),
axis.title.y=element_text(size=14))
dev.off()
pdf("~/Documents/research/causal_challenge_repo/plots/sim_plot.pdf")
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red")+
scale_x_discrete(labels=c("RBC dist width","Neutro diff count",
"Lymph diff count",
"Mono cell count",
"Baso diff count")) + theme_bw() +
theme(axis.text.x=element_text(angle=25,size=11,hjust = 1),axis.title.x=element_blank(),
axis.title.y=element_text(size=14)) +
ggtitle("Mean square error of simulation predictions")
dev.off()
load("~/Documents/research/causal_challenge_repo/Results/FINAL_PREDICTIONS.RData")
gplot2+geom_boxplot(fill="darkgreen", color="red")
gplot2 = ggplot(mouse.data.imp, aes(factor(geno), IMPC_HEM_029_001))
gplot2+geom_boxplot(fill="darkgreen", color="red")
gplot2 = ggplot(mouse.data.imp, aes(factor(geno), IMPC_HEM_029_001))
gplot2+geom_boxplot(fill="darkgreen", color="red") +
geom_boxplot(data=mouse.data.imp[mouse.data.imp$geno=="3621_1"],aes(factor(geno), IMPC_HEM_029_001), fill="blue")
gplot2 = ggplot(mouse.data.imp, aes(factor(geno), IMPC_HEM_029_001))
gplot2+geom_boxplot(fill="darkgreen", color="red") +
geom_boxplot(data=mouse.data.imp[mouse.data.imp$geno=="3621_1",],aes(factor(geno), IMPC_HEM_029_001), fill="blue")
gplot2 = ggplot(mouse.data.imp, aes(factor(geno), IMPC_HEM_029_001))
gplot2+geom_boxplot(fill="darkgreen", color="red") +
geom_boxplot(data=mouse.data.imp[mouse.data.imp$geno=="3621_1",],aes(factor(geno), IMPC_HEM_029_001), fill="blue") +
theme_bw() +
theme(axis.text.x=element_text(angle=15,size=11,hjust = 1),axis.title.x=element_blank(),
axis.title.y=element_text(size=14)) + ylab("Neutrophil differential count") +
ggtitle("Mean square error of simulation predictions")
gplot2 = ggplot(mouse.data.imp, aes(factor(geno), IMPC_HEM_029_001))
gplot2+geom_boxplot(fill="darkgreen", color="red") +
geom_boxplot(data=mouse.data.imp[mouse.data.imp$geno=="3621_1",],aes(factor(geno), IMPC_HEM_029_001), fill="blue") +
theme_bw() +
theme(axis.text.x=element_text(angle=25,size=11,hjust = 1),axis.title.x="Genotype",
axis.title.y=element_text(size=14)) + ylab("Neutrophil differential count") +
ggtitle("Predicted values for Neutrophil differential count")
gplot2 = ggplot(mouse.data.imp, aes(factor(geno), IMPC_HEM_029_001))
gplot2+geom_boxplot(fill="darkgreen", color="red") +
geom_boxplot(data=mouse.data.imp[mouse.data.imp$geno=="3621_1",],aes(factor(geno), IMPC_HEM_029_001), fill="blue") +
theme_bw() +
theme(axis.text.x=element_text(angle=25,size=11,hjust = 1),axis.title.x=element_text("Genotype"),
axis.title.y=element_text(size=14)) + ylab("Neutrophil differential count") +
ggtitle("Predicted values for Neutrophil differential count")
gplot2+geom_boxplot(fill="darkgreen", color="red") +
geom_boxplot(data=mouse.data.imp[mouse.data.imp$geno=="3621_1",],aes(factor(geno), IMPC_HEM_029_001), fill="blue") +
theme_bw() +
theme(axis.text.x=element_text(angle=25,size=11,hjust = 1),
axis.title.y=element_text(size=14)) + ylab("Neutrophil differential count") + xlab("Genotype") +
ggtitle("Predicted values for Neutrophil differential count")
pdf("~/Documents/research/causal_challenge_repo/plots/var29_plot.pdf")
gplot2 = ggplot(mouse.data.imp, aes(factor(geno), IMPC_HEM_029_001))
gplot2+geom_boxplot(fill="darkgreen", color="red") +
geom_boxplot(data=mouse.data.imp[mouse.data.imp$geno=="3621_1",],aes(factor(geno), IMPC_HEM_029_001), fill="blue") +
theme_bw() +
theme(axis.text.x=element_text(angle=25,size=11,hjust = 1),
axis.title.y=element_text(size=14)) + ylab("Neutrophil differential count") + xlab("Genotype") +
ggtitle("Predicted values for Neutrophil differential count")
dev.off()
?pdf
pdf("~/Documents/research/causal_challenge_repo/plots/var29_plot.pdf",width=9,height=5)
gplot2 = ggplot(mouse.data.imp, aes(factor(geno), IMPC_HEM_029_001))
gplot2+geom_boxplot(fill="darkgreen", color="red") +
geom_boxplot(data=mouse.data.imp[mouse.data.imp$geno=="3621_1",],aes(factor(geno), IMPC_HEM_029_001), fill="blue") +
theme_bw() +
theme(axis.text.x=element_text(angle=25,size=11,hjust = 1),
axis.title.y=element_text(size=14)) + ylab("Neutrophil differential count") + xlab("Genotype") +
ggtitle("Predicted values for Neutrophil differential count")
dev.off()
pdf("~/Documents/research/causal_challenge_repo/plots/sim_plot.pdf",width=8,height=5)
gplot = ggplot(plot_data, aes(factor(Variable), MSE))
gplot+geom_boxplot(fill="darkgreen", color="red") +
scale_x_discrete(labels=c("RBC dist width","Neutro diff count",
"Lymph diff count",
"Mono cell count",
"Baso diff count")) + theme_bw() +
theme(axis.text.x=element_text(angle=25,size=11,hjust = 1),axis.title.x=element_blank(),
axis.title.y=element_text(size=14)) +
ggtitle("Mean square error of simulation predictions")
dev.off()
gc()
gc()
gc()
mouse.data <- readRDS("mouse_data.rds")
setwd("~/Documents/research/causal_challenge_repo/data")
mouse.data <- readRDS("mouse_data.rds")
head(mouse.data)
var.names = readRDS("variable_names.RDS")
var.na
var.names
mouse.data$IMPC_HEM_027_001
mouse.data$IMPC_HEM_027_001[mouse.data$geno=="1796_1"]
plot(mouse.data$IMPC_HEM_005_001,mouse.data$IMPC_HEM_027_001)
plot(1/mouse.data$IMPC_HEM_005_001,mouse.data$IMPC_HEM_027_001)
plot(log(mouse.data$IMPC_HEM_005_001),mouse.data$IMPC_HEM_027_001)
gc()
